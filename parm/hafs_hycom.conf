[archive]
# Archive path for HyCOM output *.a and *.b files
hycomab=hpss:/NCEPDEV/emc-hwrf/2year/{ENV[USER]}/{SUBEXPT}/hycomab/{out_prefix}.tar

[dir]
FIXhycom={FIXhafs}/fix_hycom
PARMhycom={PARMhafs}/hycom/regional  ;; hycom parameter files

[config]
run_ocean=yes
ocean_model=hycom

CASE_ROOT={config/case_root}

[forecast]

# Turn off nsst
ccpp_suite_regional=FV3_HAFS_v0_gfdlmp_tedmf_nonsst
# Choose nstf_name=0,0,0,0,0
nstf_n1=0
nstf_n2=0
nstf_n3=0
nstf_n4=0
nstf_n5=0

# Ocean coupling related options. Only useful when run_ocean=yes
# When run_ocean=yes, then the following options are available for cpl_ocean
# 0, run ocean model side by side (no coupling)
# 1, direct coupling through the nearest point regridding method
# 2, direct coupling through the bilinear regridding method
# 3, CMEPS based coupling through the bilinear regridding method
cpl_ocean=3
cpl_dt=360  ;; coupling time step in seconds
#ocean_tasks=120 ;; Number of PEs for the OCN component
ocean_tasks=60 ;; Number of PEs for the OCN component
ocean_start_dtg=auto ;; epoch day since hycom_epoch=datetime.datetime(1900,12,31,0,0,0), e.g., 43340.00000
merge_import=.true.

[forecast_ens]
ccpp_suite_regional_ens=FV3_HAFS_v0_gfdlmp_tedmf_nonsst

#
[rocotostr]
FORECAST_RESOURCES=FORECAST_RESOURCES_regional_{forecast/layoutx}x{forecast/layouty}io{forecast/write_groups}x{forecast/write_tasks_per_group}_ocn{forecast/ocean_tasks}_omp2
FORECAST_ENS_RESOURCES=FORECAST_ENS_RESOURCES_regional_{forecast_ens/layoutx_ens}x{forecast_ens/layouty_ens}io{forecast_ens/write_groups_ens}x{forecast_ens/write_tasks_per_group_ens}_ocn{forecast/ocean_tasks}_omp2

[exe]
hafs_get_rtofs={EXEChafs}/hafs_get_rtofs.x
hafs_rtofs_subregion={EXEChafs}/hafs_rtofs_subregion.x
hafs_gfs2ofs2={EXEChafs}/hafs_gfs2ofs2.x
hafs_timeinterp_forcing={EXEChafs}/hafs_timeinterp_forcing.x
hafs_archv2restart={EXEChafs}/hafs_archv2restart.x
hafs_restart2restart={EXEChafs}/hafs_restart2restart.x
hafs_archv2data3z={EXEChafs}/hafs_archv2data3z.x
hafs_archv2data2d={EXEChafs}/hafs_archv2data2d.x
hafs_archv3z2nc={EXEChafs}/hafs_archv3z2nc.x
hafs_gfs2ofsinputs.py={USHhafs}/hafs_gfs2ofsinputs.py

[hycominit1]
scrub=no              ;; Override global scrubbing option for hycom init
catalog={input_catalog}

RTOFS_HIST=/dev/null  ;; RTOFS .a and .b file locations of historical RTOFS
RTOFS_FCST=/dev/null  ;; RTOFS .a and .b file locations of real-time RTOFS
RTOFS_TAR=/dev/null   ;; RTOFS .a.tgz and .b file locations
RTOFS_TAR={rtofs}/rtofs.{aYMD}   ;; RTOFS .a.tgz and .b file locations
RTOFS_STAGE={WORKhafs}/hycominit1/RTOFSDIR ;; RTOFS staging/linking area
#net yetRTOFS_STAGE={rtofs}/rtofs.{aYMD};; RTOFS staging/linking area

bools=hycombools      ;; Section with YES/NO variables for shell programs
strings=hycomstrings  ;; Section with string variables for shell programs

## Output restart files; should contain RUNmodIDout and ab vars
restart_outR={com}/{out_prefix}.{RUNmodIDout}.spin_restart.{ab}
## Output restart R files; should contain RUNmodIDout and ab vars
restart_out={com}/{out_prefix}.{RUNmodIDout}.restart.{ab}
## Output spin files; should contain RUNmodIDout and ab vars
spin_archv={com}/{out_prefix}.spin_archv.{ab}

## Enable river adjustment in HYCOM initialization?
adjust_river=0

## Enable temperature adjustment in HYCOM initialization?
adjust_temp=0

## Interval in hours between forcing in the 126hr forecast mode
forecast_forcing_interval=3

atmos1_dataset=gdas1      ;; Dataset for global atmospheric surface data before time 0
atmos1_flux=gdas1_sfluxgrb ;; Item for atmospheric flux data before time 0
atmos1_grid=gdas1_gribA   ;; Item for atmospheric air data before time 0
atmos2_dataset=gfs        ;; Dataset for global atmospheric surface data after time 0
atmos2_flux=gfs_sfluxgrb  ;; Item for atmospheric flux data after time 0
atmos2_grid=gfs_gribA     ;; Item for atmospheric air data after time 0
ocean_dataset=rtofs       ;; Dataset for global ocean archv data
ocean_fcst=rtofs_fcst     ;; Item for ocean data after analysis time
ocean_past=rtofs_past     ;; Item for ocean data before the analysis time
ocean_now=rtofs_now       ;; Item for ocean data at the analysis time
ocean_rst=rtofs_rst       ;; Item for ocean restart files
ocean_dataset_stage=rtofsstage       ;; Dataset for global ocean archv data (staged)
ocean_fcst_name=rtofs_fcst_name     ;; Item for ocean data after analysis time
ocean_past_name=rtofs_past_name     ;; Item for ocean data before the analysis time
ocean_now_name=rtofs_now_name       ;; Item for ocean data at the analysis time
ocean_rst_name=rtofs_rst_name       ;; Item for ocean restart files

[hycominit2]
scrub=no              ;; Override global scrubbing option for hycom init
catalog={input_catalog}

bools=hycombools      ;; Section with YES/NO variables for shell programs
strings=hycomstrings  ;; Section with string variables for shell programs

## Interval in hours between forcing in the 126hr forecast mode
forecast_forcing_interval=3

atmos1_dataset=gdas1      ;; Dataset for global atmospheric surface data before time 0
atmos1_flux=gdas1_sfluxgrb ;; Item for atmospheric flux data before time 0
atmos1_grid=gdas1_gribA   ;; Item for atmospheric air data before time 0
atmos2_dataset=gfs        ;; Dataset for global atmospheric surface data after time 0
atmos2_flux=gfs_sfluxgrb  ;; Item for atmospheric flux data after time 0
atmos2_grid=gfs_gribA     ;; Item for atmospheric air data after time 0

## Configuration for the ocean_post job
[hycompost]
scrub=no              ;; Override global scrubbing option for hycom init

bools=hycombools     ;; Section with YES/NO variables for shell programs
strings=hycomstrings ;; Section with string variables for shell programs

## This section contains YES/NO variables and values which will be set
## as environment variables in the shell programs.
#
# The hycombools section is filled with ENV_VAR=value entries.  Each
# ENV_VAR will be set to the boolean version of the value.  Values are
# converted to Python booleans and then to the strings YES or NO.  All
# environment variables must be valid shell and Python variable names.
[hycombools]
RUN_OCEAN={run_ocean}
RUN_WAVE={run_wave}

## This section contains variables and string values which will be set
## as environment variables in the shell programs.
#
# The hycomstrings section is filled with ENV_VAR=value entries.  The
# ENV_VAR will be set to the value, unmodified.  All environment
# variables must be valid shell and Python variable names.  The
# strings must be single line strings (no end-of-line characters) that
# are expressable in both shell and Python.
#
# @note The special RTOFSDIR variable is set independently based on
# the hafs.hycom.HYCOMInit.find_rtofs_data() function.
[hycomstrings]
out_prefix={config/out_prefix}
out_prefix_nodate={config/out_prefix_nodate}
FORECAST_DIR={dir/WORKhafs}/runwrf
OCEAN_MODEL={ocean_model}
WAVE_MODEL={wave_model}
YMDH={config/YMDH}
stormlabel={config/stormlabel}
STORM={vit[stormname]}
STID={vit[stormid3]}
basin2={vit[pubbasin2]}
USHhafs={dir/USHhafs}
FIXhafs={dir/FIXhafs}
PARMhafs={dir/PARMhafs}
EXEChafs={dir/EXEChafs}
COMhafs={config/com}
WORKhafs={dir/WORKhafs}
CASE_ROOT={config/case_root}
