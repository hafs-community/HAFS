# This is a UNIX conf file that contains ALL information relating to
# the HAFS basin-focused global-nesting configuration.
#
[config]
# Specify the domain center Latitude and Longitude
domlat=22.0
domlon=-62.0
# Same as domlat and domlon but vitals formatted
vitalsdomlat=220N
vitalsdomlon=620W

# HAFS launcher requires vitals and a storm.
# This is a default minimum vitals file for a fake storm.
# The format of the missing value fields was based on the log
# output returned when running the launcher after the vitals have
# been "cleaned" up. That is, if  you enter the fields as all -999 values,
# the "cleaned" output is returned. In essence I'm treating the vitals
# module as a factory in the sense that it knows the correct format.
# NHC 00L FAKE 20120710 0000 250N 0800W -99 -99 -999 -999 -099 -9 -99 -999 -999 -999 -999 M
# fakestormid is a config option set in the launcher and is the
# last storm id in the list of storms.
fakestormid=00L
fakestormname=NATL
fakestormorg=NHC
fakestorm_vitals={fakestormorg} {fakestormid} {fakestormname} {YMD} {HH}{min} {vitalsdomlat} {vitalsdomlon} -99 -99 -999 -999 -099 -9 -99 -999 -999 -999 -999 M

[dir]
PARMforecast={PARMhafs}/forecast/globnest

[grid]
CASE=C768            ;; FV3 resolution
LEVS=65              ;; Model vertical levels: 65
gtype=nest           ;; grid type: uniform, stretch, nest, or regional
# If gridfixdir is provided and the dir exists, then use the pre-generated static grid fix files under gridfixdir
gridfixdir=/let/hafs_grid/generate/grid
# Otherwise, will generate the model grid according to the following grid parameters
# Need for grid types: stretch, nest and regional
stretch_fac=1.0001   ;; Stretching factor for the grid
target_lon={domlon}  ;; center longitude of the highest resolution tile
target_lat={domlat}  ;; center latitude of the highest resolution tile
# Need for grid types: nest and regional
nest_grids=1
parent_grid_num=1
parent_tile=6
refine_ratio=4
istart_nest=47
jstart_nest=239
iend_nest=1486
jend_nest=1198

[forecast]
# For the global domain if it is a global or global-nesting experiment
glob_k_split=1
glob_n_split=7
glob_layoutx=8
glob_layouty=10
glob_npx=769
glob_npy=769
glob_io_layoutx=1
glob_io_layouty=1
glob_full_zs_filter=.true.
glob_n_zs_filter=0
glob_n_del2_weak=15
glob_max_slope=0.15
glob_shal_cnv=.true.
glob_do_deep=.true.
# For the nested or regional standalone domain
k_split=4
n_split=5
layoutx=30
layouty=40
npx=2881
npy=1921
io_layoutx=1
io_layouty=1
full_zs_filter=.true.
n_zs_filter=1
n_del2_weak=24
max_slope=0.15
shal_cnv=.true.
do_deep=.true.

npz=64

quilting=.true.
write_dopost=.false.
output_history=.true.

output_grid=regional_latlon,regional_latlon
output_grid_cen_lon=180.0,{domlon}     ;; central longitude
output_grid_cen_lat=0.0,{domlat}       ;; central latitude
output_grid_lon_span=360.0,105.0       ;; output domain span for longitude in regular latlon coordinate system (in degrees)
output_grid_lat_span=180.0,60.0        ;; output domain span for latitude in regular latlon coordinate system (in degrees)
output_grid_dlon=0.20,0.05             ;; output grid spacing dlon . . . .
output_grid_dlat=0.20,0.05             ;; output grid spacing dlat . . . .

[atm_post]
satpost=.false.
post_gridspecs=auto,auto
trak_gridspecs={post_gridspecs}

[atm_post_ens]
satpost_ens=.false.
post_gridspecs_ens=auto,auto
trak_gridspecs_ens={post_gridspecs}

[rocotostr]
FORECAST_RESOURCES=FORECAST_RESOURCES_globnest_6x{forecast/glob_layoutx}x{forecast/glob_layouty}_{forecast/layoutx}x{forecast/layouty}io{forecast/write_groups}x{forecast/write_tasks_per_group}_omp2
