#!/bin/sh

date
export PS4='+ $SECONDS + '
set -xue

export HOMEhafs=${HOMEhafs:?}
export USHhafs=${USHhafs:-${HOMEhafs}/ush}
export EXEChafs=${EXEChafs:-${HOMEhafs}/exec}
export PARMhafs=${PARMhafs:-${HOMEhafs}/parm}
export FIXhafs=${FIXhafs:-${HOMEhafs}/fix}

source ${USHhafs}/hafs_pre_job.sh.inc
source ${HOLDVARS:-storm1.holdvars.txt}

export machine=${WHERE_AM_I:-wcoss2}
export envir=${envir:-prod} # prod, para, test
export RUN_ENVIR=${RUN_ENVIR:-dev} # nco or dev
if [ "${RUN_ENVIR^^}" != NCO ]; then
  module list
fi

source ${USHhafs}/hafs_runcmd.sh.inc

# Run setpdy and initialize PDY variables
#setpdy.sh
#. ./PDY
export PDY=${PDY:-$(echo ${YMDH} | cut -c 1-8 )}

export WORKhafs=${WORKhafs:?}
export COMIN=${COMIN:?}
export COMOUT=${COMOUT:?}
export COMhafs=${COMhafs:-${COMOUT}}

export MPISERIAL=${MPISERIAL:-${EXEChafs}/hafs_mpiserial.x}

export CDATE=${CDATE:-${YMDH}}
export cyc=${cyc:?}
export STORM=${STORM:-FAKE}
export STORMID=${STORMID:-00L}
export ENSDA=${ENSDA:-NO}
export FGAT_MODEL=${FGAT_MODEL:-gfs}
export FGAT_HR=${FGAT_HR:-00}

export run_init=yes

if [ ${FGAT_MODEL} = gdas ]; then
  export CDATE=$(${NDATE} $(awk "BEGIN {print ${FGAT_HR}-6}") $CDATE)
# export out_prefix=$(echo "${STORM}${STORMID}.${CDATE}" | tr '[A-Z]' '[a-z]')
  export out_prefix="${STORMID,,}.${CDATE}"
fi

#===============================================================================
# forecast

if [ "${ENSDA}" = YES ]; then
  export ENSID=${ENSID:-001}
  export FIXgrid=${WORKhafs}/intercom/grid_ens
  export INPdir=${WORKhafs}/intercom/chgres_ens/mem${ENSID}
  export DATA=${WORKhafs}/atm_init_ens/mem${ENSID}/forecast
  export RESTARTout=${WORKhafs}/intercom/RESTART_init_ens/mem${ENSID}
elif [ ${FGAT_MODEL} = gdas ]; then
  export FIXgrid=${WORKhafs}/intercom/grid
  export INPdir=${WORKhafs}/intercom/chgres_fgat${FGAT_HR}
  export DATA=${WORKhafs}/atm_init_fgat${FGAT_HR}/forecast
  export RESTARTout=${WORKhafs}/intercom/RESTART_init_fgat${FGAT_HR}
else
  export FIXgrid=${WORKhafs}/intercom/grid
  export INPdir=${WORKhafs}/intercom/chgres
  export DATA=${WORKhafs}/atm_init/forecast
  export RESTARTout=${WORKhafs}/intercom/RESTART_init
fi

#export NHRS=$(echo "${dt_atmos}/3600" | bc -l)
#export NHRS=$(awk "BEGIN {print ${dt_atmos}/3600*2}")
export NHRS=$(awk "BEGIN {print ${dt_atmos}/3600}")
export NHRS_ENS=$(awk "BEGIN {print ${dt_atmos}/3600}")
#export NBDYHRS=0
export restart_interval="$(awk "BEGIN {print ${dt_atmos}/3600}") 6"
export warm_start_opt=0

export RUN_ATM_MERGE=NO
export RUN_ATM_MERGE_FGAT=NO
export RUN_ATM_MERGE_ENS=NO
export RUN_ATM_VI=NO
export RUN_ATM_VI_FGAT=NO
export RUN_ATM_VI_ENS=NO
export RUN_GSI_VR=NO
export RUN_GSI_VR_FGAT=NO
export RUN_GSI_VR_ENS=NO
export RUN_GSI=NO
export RUN_ENKF=NO
export RUN_ANALYSIS_MERGE=NO
export RUN_ANALYSIS_MERGE_ENS=NO
export run_ocean=no
export run_wave=no
export ccpp_suite_regional=${ccpp_suite_regional_init:-$ccpp_suite_regional}
export ccpp_suite_glob=${ccpp_suite_glob_init:-$ccpp_suite_glob}
export ccpp_suite_nest=${ccpp_suite_nest_init:-$ccpp_suite_nest}
export nstf_n1=${nstf_n1_init:-$nstf_n1}
export nstf_n2=${nstf_n2_init:-$nstf_n2}
export nstf_n3=${nstf_n3_init:-$nstf_n3}
export nstf_n4=${nstf_n4_init:-$nstf_n4}
export nstf_n5=${nstf_n5_init:-$nstf_n5}
export glob_layoutx=${glob_layoutx_init:-$glob_layoutx}
export glob_layouty=${glob_layouty_init:-$glob_layouty}
export layoutx=${layoutx_init:-$layoutx}
export layouty=${layouty_init:-$layouty}

export SCRUBDATA=${SCRUBDATA:-YES}
if [ "${SCRUBDATA}" = YES ]; then
  rm -rf $DATA
fi

mkdir -p $DATA
cd $DATA

# Execute ex-script
${HOMEhafs}/scripts/exhafs_forecast.sh

export KEEPDATA=${KEEPDATA:-YES}
if [ "${KEEPDATA^^}" != YES ]; then
  rm -rf $DATA
fi

date

#===============================================================================
# post

export TOTAL_TASKS=120
export OMP_NUM_THREADS=1
source ${USHhafs}/hafs_runcmd.sh.inc

if [ ${ENSDA} = YES ]; then
  export ENSID=${ENSID:-001}
  export INPdir=${WORKhafs}/atm_init_ens/mem${ENSID}/forecast
  export DATA=${WORKhafs}/atm_init_ens/mem${ENSID}/post
  export COMOUTpost=${WORKhafs}/intercom/atm_init_ens/mem${ENSID}
  export intercom=${WORKhafs}/intercom/atm_init_ens/mem${ENSID}/post
  export NHRS_ENS=0
elif [ ${FGAT_MODEL} = gdas ]; then
  export INPdir=${WORKhafs}/atm_init_fgat${FGAT_HR}/forecast
  export DATA=${WORKhafs}/atm_init_fgat${FGAT_HR}/post
  export COMOUTpost=${WORKhafs}/intercom/atm_init_fgat${FGAT_HR}
  export intercom=${WORKhafs}/intercom/atm_init_fgat${FGAT_HR}/post
  export NHRS=0
else
  export INPdir=${WORKhafs}/atm_init/forecast
  export DATA=${WORKhafs}/atm_init/post
  export COMOUTpost=${WORKhafs}/intercom/atm_init
  export intercom=${WORKhafs}/intercom/atm_init/post
  export NHRS=0
fi

export SENDCOM=${SENDCOM:-YES}
export SCRUBDATA=${SCRUBDATA:-YES}

if [ "${SCRUBDATA}" = YES ]; then
  rm -rf $DATA
  rm -f $INPdir/postf???
  rm -rf ${intercom}
fi
mkdir -p ${COMOUTpost}
mkdir -p ${intercom}
mkdir -p $DATA
cd $DATA

# Execute ex-script
${HOMEhafs}/scripts/exhafs_atm_post.sh

export KEEPDATA=${KEEPDATA:-YES}
if [ "${KEEPDATA^^}" != YES ]; then
  rm -rf $DATA
fi

date

#===============================================================================
# product

export OMP_NUM_THREADS=1
export APRUNC=${APRUNS}

if [ ${ENSDA} = YES ]; then
  export ENSID=${ENSID:-001}
  export INPdir=${WORKhafs}/intercom/atm_init_ens/mem${ENSID}/post
  export DATA=${WORKhafs}/atm_init_ens/mem${ENSID}/product
  export COMOUTproduct=${WORKhafs}/intercom/atm_init_ens/mem${ENSID}
  export NHRS_ENS=0
elif [ ${FGAT_MODEL} = gdas ]; then
  export INPdir=${WORKhafs}/intercom/atm_init_fgat${FGAT_HR}/post
  export DATA=${WORKhafs}/atm_init_fgat${FGAT_HR}/product
  export COMOUTproduct=${WORKhafs}/intercom/atm_init_fgat${FGAT_HR}
  export NHRS=0
else
  export INPdir=${WORKhafs}/intercom/atm_init/post
  export DATA=${WORKhafs}/atm_init/product
  export COMOUTproduct=${WORKhafs}/intercom/atm_init
  export NHRS=0
fi

export SENDCOM=${SENDCOM:-YES}
export SCRUBDATA=${SCRUBDATA:-YES}

if [ "${SCRUBDATA}" = YES ]; then
  rm -rf $DATA
fi

mkdir -p ${COMOUTproduct}
mkdir -p $DATA
cd $DATA

if [ ${gtype} = nest ]; then
  ngrids=$((${nest_grids} + 1))
else
  ngrids=${nest_grids}
fi

rm -f cmdfile_product
# Loop for grids/domains to prepare the cmdfile
for ng in $(seq 1 ${ngrids});
do

if [[ $ng -eq 1 ]]; then
  neststr=""
  tilestr=".tile1"
else
  neststr=".nest$(printf '%02d' ${ng})"
  tilestr=".tile$(printf '%d' ${ng})"
fi
gridstr=".grid$(printf '%02d' ${ng})"
echo "export neststr=$neststr tilestr=${tilestr} gridstr=${gridstr}; ${HOMEhafs}/scripts/exhafs_product.sh > run_product${gridstr}.log 2>&1" >> cmdfile_product

done

chmod +x cmdfile_product
${APRUNC} ${MPISERIAL} -m cmdfile_product

for ng in $(seq 1 ${ngrids});
do

if [[ $ng -eq 1 ]]; then
  neststr=""
else
  neststr=".nest$(printf '%02d' ${ng})"
fi
gridstr=".grid$(printf '%02d' ${ng})"
cat ./run_product${gridstr}.log
#if grep "PROGRAM GETTRK   HAS ENDED" ./tracker${neststr}/hafs_gettrk.out ; then
if grep "top of output_all" ./tracker${neststr}/hafs_gettrk.out ; then
  echo "INFO: successfully ran run_product${gridstr}"
else
  echo "ERROR: failed running run_product${gridstr}"
  echo "ERROR: exitting..."
  exit 1
fi

done

export KEEPDATA=${KEEPDATA:-YES}
if [ "${KEEPDATA^^}" != YES ]; then
  rm -rf $DATA
fi

date

#===============================================================================

exit
